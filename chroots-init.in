#!/bin/bash
#
# Copyright (C) 2008  Alfredo Matos
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#

CHROOTSLIBDIR=@pkglibdir@
PROGNAME="@pkgname@ init"

if [ -r chroots-functions ]; then
	echo "Running in development mode."
	CHROOTSLIB=chroots-functions
else
	if [ -r $CHROOTSLIBDIR/chroots-functions ]; then
		CHROOTSLIB=$CHROOTSLIBDIR/chroots-functions
	else
		echo "chroots library not found."
		exit 1
	fi;
fi;

. $CHROOTSLIB

BINDDIRS="dev tmp"

function usage {
cat << EOF
usage: $PROGNAME COMMAND

  Mount the necessary partitions to start the specified chroot.

OPTIONS:
    -h, --help    Show this message
    -v, --verbose Verbose output
EOF
    exit 0;
}



OPTS="vh"
LONGOPTS="verbose,help"
TEMP=`getopt -o $OPTS --long $LONGOPTS -- "$@"`

if [ $? != 0 ]; then
	echo "Invalid arguments";
	usage;
	exit 1 ;
fi

eval set -- "$TEMP"


while true; do
	case "$1" in
		--help|-h)
			usage;
			exit 0;
			shift;
			;;
		--verbose|-v)
			VERBOSE=1
			shift;
			;;
		--)
			shift;
			break;
			;;
		*)
			echo "Error parsing options";
			exit 1;
			;;
	esac
done;

chroots_check_permissions;

# Check input and select a chroot

get_work_chroot $1

CHRNAME=$_CHRNAME

chroots_verify_chroot $CHRNAME;

if [ $? != 0 ]; then
	exit 1;
fi;

# Find the necessary mount points and verify

chroots_check_mount $CHRNAME;

if [ $? != 0 ]; then
	echo "Chroot \"$CHRNAME\" already mounted."
	exit 1;
fi;

# Mount

CHRTARGET=$_CHRTARGET

if [ $VERBOSE == 1 ]; then
	echo "Mount proc dir $CHRTARGET/proc"
fi;

mount -t proc none $CHRTARGET/proc

for i in $BINDDIRS; do
	if [ $VERBOSE == 1 ]; then
		echo "Binding /$i to $CHRTARGET/$i"
	fi;
	mount -o bind /$i $CHRTARGET/$i
done;
