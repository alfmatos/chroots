#!/bin/bash
#
# Copyright (C) 2008  Alfredo Matos
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#

CHROOTSLIBDIR=@pkglibdir@

if [ -r chroots-functions ]; then
	echo "Running in development mode."
	CHROOTSLIB=chroots-functions
else
	if [ -r $CHROOTSLIBDIR/chroots-functions ]; then
		CHROOTSLIB=$CHROOTSLIBDIR/chroots-functions
	else
		echo "chroots library not found."
		exit 1
	fi;
fi;

. $CHROOTSLIB

FORCE=0

function usage {

NAME=`echo $1 | sed -e "s/\.\///g"`

	cat << EOF
 $NAME chroot_name [OPTIONS]"
 Usage example: $NAME hardy"

  Unmount the specified chroot.

OPTIONS:
  -h, --help      Show this message
  -v, --verbose   Verbose
EOF
}

OPTS="vhf"
LONGOPTS="verbose,help,force"
TEMP=`getopt -o $OPTS --long $LONGOPTS -- "$@"`

if [ $? != 0 ]; then
	echo "Invalid arguments";
	usage $0;
	exit 1;
fi;

eval set -- "$TEMP"


while true; do
	case "$1" in
		--help|-h)
			usage $0;
			exit 0;
			shift;
			;;
		--verbose|-v)
			VERBOSE=1
			shift;
			;;
		--force|-f)
			FORCE=1;
			shift;
			;;
		--)
			shift;
			break;
			;;
		*)
			echo "Error parsing options";
			exit 1;
			;;
	esac
done;

chroots_check_permissions

# Determine runtime user
CHRUSER=$USER
CHRGROUP=$GROUPS

if [ $SUDO_USER ]; then
        CHRUSER=$SUDO_USER
        CHRGROUP=$SUDO_GID
fi;

HOMEDIR=/home/$CHRUSER
CFGFILE=$HOMEDIR/.chroots

# Determine chroot to use

if [ "$1" == "" ]; then
	echo "No chroot specified."
	usage $0
	exit 1;
fi;

chroots_get_chroot $1

if [ $? != 0 ]; then
	echo "Failed to get chroot \"$1\".";
	exit 1;
fi;

CHRNAME=$_CHRNAME
CHRTARGET=$_CHRTARGET

chroots_check_mount $CHRNAME

if [ $? != 0 ]; then
	echo "Chroot $CHRNAME is mounted. Please stop the chroot first.";
	exit 1;
fi;

# Try to delete

if [ $VERBOSE == 1 ]; then
	echo "Deleting $CHRTARGET...";
fi;

rm -rf $CHRTARGET

if [ $VERBOSE == 1 ]; then
	echo "Removing $CHRNAME...";
fi;

grep -v $CHRNAME $CFGFILE > $CFGFILE

if [ $VERBOSE == 1 ]; then
	echo "Done.";
fi;
