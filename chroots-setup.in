#!/bin/bash
#
# Copyright (C) 2008  Alfredo Matos
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#

CHROOTSLIBDIR=@pkglibdir@

if [ -r chroots-functions ]; then
	echo "Running in development mode."
	CHROOTSLIB=chroots-functions
else
	if [ -r $CHROOTSLIBDIR/chroots-functions ]; then
		CHROOTSLIB=$CHROOTSLIBDIR/chroots-functions
	else
		echo "chroots library not found."
		exit 1
	fi;
fi;

. $CHROOTSLIB

MIRROR="http://archive.ubuntu.com/ubuntu"
DEBOOTSTRAP=/usr/sbin/debootstrap

function usage {
NAME=`echo $1 | sed -e "s/\.\///g"`

	cat << EOF
 $NAME <suite> <target>
 Usage example: $NAME hardy /var/chroots/hardy-chroot

OPTIONS:
  -h, 	       --help    		Show this message
  -v,          --verbose 		Verbose
  -u USERNAME, --user USERNAME          Copy a user from the system 
  -g GROUP,    --group GROUPNAME        Copy a group from the system
               --no-cache               Do not use chached packages

  Note #1: The deepest target directory will be used as the chroot name

   $ $NAME hardy /var/chroots/hardy-chroot;

   The previous command installs an Ubuntu Hardy chroot into folder
  "/var/chroots/hardy-chroot" with name "hardy-chroot". This is the
   name used by the other commands to list, mount, login and quit.

  Note #2: If the target is not a directory name, it will be used as the
   chroot name and installed in '/var/chroots/chroot-name'

  Note #3: All package cache is kept in /var/chroots/packages/{distro}

EOF
}

# Begin program

VERBOSE=0
USECACHE="yes"

# Determine runtime user

CHRUSER=$USER
CHRGROUP=$GROUPS

if [ $SUDO_USER ]; then
	CHRUSER=$SUDO_USER
	CHRGROUP=$SUDO_GID
fi;

HOMEDIR=/home/$CHRUSER

OPTS="vhu:g:c"
LONGOPTS="verbose,help,user:,group:,no-cache"

TEMP=`getopt -o $OPTS --long $LONGOPTS -- "$@"`

if [ $? != 0 ] ; then
	echo "Invalid arguments.";
	usage $0;
	exit 1 ;
fi

eval set -- "$TEMP"


while true; do
	case "$1" in
		--help|-h)
			usage $0;
			shift;
			;;
		--verbose|-v)
			VERBOSE=1
			shift;
			;;
		--no-cache|-c)
			USECACHE="no"
			shift;
			;;
		--user|-u)
			CHRUSER=$2;
			shift; shift;
			;;
		--group|-g)
			GROUP=$2;
			shift; shift;
			;;
		--)
			shift;
			break;
			;;
		*)
			echo "Error parsing options";
			exit 1;
			;;
	esac
done;

if [ $UID != 0 ]; then
	echo "Superuser permissions required. Aborting."
	exit 1
fi;

if [ ! -x $DEBOOTSTRAP ]; then
	echo "deboostrap required but no installed."
	echo "Try 'apt-get install debootstrap'"
	exit 1
fi;


# VALIDADE BOTH REQUIRED PARAMETERS

if [ "$1" == "" ]; then
	echo "Invalid parameters: Must specify distribution.";
	usage $0
	exit 1
fi;

if [ "$2" == "" ]; then
	echo "Invalid parameters: Must specify target.";
	usage $0
	exit 1
fi;


DISTRO=$1

case $DISTRO in
	"intrepid"|"hardy"|"gutsy"|"feisty"|"dapper")
		#echo "Using a ubuntu distribution"
		;;
	"lenny"|"sarge"|"sid"|"unstable")
		#echo "Using a debian distribution"
		;;
	*)
		echo "Unknown distribution: \"$DISTRO\". Aborting."
		exit 1
		;;
esac;

CHRNAME=`basename $2`
CHRTARGET=`dirname $2`

if [ "$CHRTARGET" == "." ]; then
	chroots_get_target $CHRNAME
	CHRTARGET=$_CHRTARGET
fi;

CHRPATH=$CHRTARGET/$CHRNAME

#echo "CHRNAME: $CHRNAME"
#echo "CHRPATH: $CHRPATH"
#echo "CHRTARGET: $CHRTARGET"

if [ -d $CHRPATH ]; then
	echo "Target already exists. Aborting."
	exit 1
fi

echo "Installing '$CHRNAME' into $CHRTARGET, using a $DISTRO distribution."

chroots_check_dir $CHRPATH

# System cache is located at /var/archives/cache

PACKAGES=$CHRPATH/var/cache/apt/archives
CACHE=/var/chroots/packages/$DISTRO

if [ $USECACHE == "yes" ]; then
	if [ -d $CACHE ]; then
		chroots_check_dir $PACKAGES
		rsync $CACHE/*.deb $PACKAGES
	fi;
fi;


echo "Building the chroot environment"
debootstrap $DISTRO $CHRPATH $MIRROR >& /dev/null
echo "Done."

echo "Updating deb package cache"
chroots_check_dir $CACHE
rsync $PACKAGES/*.deb $CACHE
echo "Done."

echo "Copying extra system files into chroot."

CHRHOMEDIR=$CHRPATH/home/$CHRUSER
CHRETCDIR=$CHRPATH/etc

chroots_check_dir $CHRHOMEDIR
chroots_check_dir $CHRETCDIR

echo "$CHRNAME-chroot" > $CHRETCDIR/debian_chroot

FILES="passwd shadow group sudoers hosts"

for i in $FILES; do
	cp /etc/$i $CHRETCDIR
done;

# Set some defaults for nice login
if [ -f $HOMEDIR/.bashrc ]; then
	cp $HOMEDIR/.bashrc $CHRHOMEDIR
fi;

chown -R $CHRUSER:$CHRGROUP $CHRHOMEDIR


# Enable extra sources in the apt sources.list
if [ "$DISTRO" == "hardy" ]; then
   echo "Enabling universe and multiverse for ubuntu."
   echo "deb $MIRROR $DISTRO universe multiverse" >> $CHRETCDIR/apt/sources.list
fi;

# Post install
CHRTAG="$CHRNAME $CHRPATH $DISTRO $CHRUSER"

echo $CHRTAG >> $HOMEDIR/.chroots
chown $CHRUSER:$CHRGROUP $HOMEDIR/.chroots
